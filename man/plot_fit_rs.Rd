% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_fit_rs.r
\name{plot_fit_rs}
\alias{plot_fit_rs}
\title{from resistance. plot fitness by resistant/susceptible genotypes}
\usage{
plot_fit_rs(df_fit, column, column_facet = NULL, title = NULL, ylim = c(0,
  1), yblank = FALSE, size = 4)
}
\arguments{
\item{df_fit}{dataframe}

\item{column}{name of column containing fitness values}

\item{column_facet}{optional column to facet by}

\item{title}{optional title for the plot}

\item{ylim}{ylim, default = c(0,1)}

\item{yblank}{whether to remove y axis title & labels}

\item{size}{text size for RS labels, default 4}
}
\value{
dataframe of plotted fitness values and colours
}
\description{
accepts a dataframe with a column or rownames containing RS identifiers and another
}
\examples{
#singleLocus
df_fit1 <- as.data.frame(fitnessSingleLocus())
#temp adding an extra column for faceting
df_fit1$locus <- paste('locus', c(1,1,1,2,2,2))
plot_fit_rs(df_fit1, 'hi', column_facet='locus')

#trying to be able to facet for no & hi 
#but the function relies on rownames which get lost this way
#might want to convert the whole function, but want to keep it working for niche&genotype examples
#df_fit2 <- gather(df_fit1, key=exposure_group, value=fitness, no, lo, hi) 
#plot_fit_rs(df_fit2, 'fitness', column_facet='exposure_group')  
 
 
#niche
#library(reshape2)
df_fit2 <- reshape2::melt(fitnessNiche()[,,'A','B'])
rownames(df_fit2) <- paste(df_fit2$locus1, df_fit2$locus2)
plot_fit_rs(df_fit2, 'value')

 
#genotype
#transpose to get in useable format
df_fit3 <- as.data.frame(t(as.data.frame(fitnessGenotype())))
plot_fit_rs(df_fit3,'f')

}
